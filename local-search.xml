<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>c++栈和队列</title>
    <link href="/2023/02/01/c-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
    <url>/2023/02/01/c-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<h1 id="Stack"><a href="#Stack" class="headerlink" title="Stack:"></a>Stack:</h1><p>首先声明一个栈：<br>stack<Object> st;</p><p>然后是stack用到的函数：</p><ol><li><p>st.empty() 用于判断是否为空</p></li><li><p>st.size() 大小</p></li><li><p>st.top() 访问最上层的元素</p></li><li><p>st.push() 在顶部插入新元素</p></li><li><p>st.pop()  从顶部开始删除元素</p></li><li><p>st.emplace()</p></li><li><p>st.swap() 可以交换两个栈的内容</p></li></ol><h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><p>创建队列：<br>queue<Object> que;</p><p>empty<br>size<br>front<br>back<br>push<br>pop<br>emplace<br>swap</p>]]></content>
    
    
    <categories>
      
      <category>c++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>栈</tag>
      
      <tag>队列</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>idea小妙招</title>
    <link href="/2023/01/30/idea%E5%B0%8F%E5%A6%99%E6%8B%9B/"/>
    <url>/2023/01/30/idea%E5%B0%8F%E5%A6%99%E6%8B%9B/</url>
    
    <content type="html"><![CDATA[<p>选中所有相同的  ctrl + command + G<br>鼠标光标部分选中 option + 左键拖动<br>格式化代码 option + command + L</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDBC的API介绍</title>
    <link href="/2023/01/30/JDBC/"/>
    <url>/2023/01/30/JDBC/</url>
    
    <content type="html"><![CDATA[<p>DriverManager: </p><p>1.注册驱动2.获取数据库连接<br>有用的方法: getConnection, registerDriver<br><img src="/2023/01/30/JDBC/getconnection%E5%8F%82%E6%95%B0.jpeg"></p><p>Connection:</p><ol><li>获取执行SQL的对象<br>普通执行SQL对象<pre> Statement createStatement()</pre>预编译SQL的执行SQL对象：防止SQL注入<pre>PreparedStatement prepareStatement(sql)</pre>执行存储过程的对象<pre>CallableStatement prepareCall(sql)<pre></li><li>管理事务</li></ol><p>Statement:</p><p>Resultset:</p><p><img src="/2023/01/30/JDBC/831675064474_.pic.jpg"></p><p>preparedStatement:</p><p><img src="/2023/01/30/JDBC/841675070543_.pic.jpg"></p><p>数据库连接池：<br>预先在池子里提前准备一些连接conn，用户访问时先从池子里找，用户用完后连接会回到池子。并且连接池会把空闲的连接强制收回防止连接遗漏</p><p>数据库连接池实现：</p><p>标准接口DataSource</p><p>Druid（数据库）连接池</p>]]></content>
    
    
    <categories>
      
      <category>JavaWeb学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JDBC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL约束和数据库设计</title>
    <link href="/2023/01/29/SQL%E7%BA%A6%E6%9D%9F/"/>
    <url>/2023/01/29/SQL%E7%BA%A6%E6%9D%9F/</url>
    
    <content type="html"><![CDATA[<ol><li>概念和分类</li></ol><p>用来限制加入表的数据</p><p><img src="/2023/01/29/SQL%E7%BA%A6%E6%9D%9F/%E7%BA%A6%E6%9D%9F%E7%9A%84%E5%88%86%E7%B1%BB.png" alt="约束的分类"><br>注：mysql 不支持检查约束</p><p>外键约束:</p><pre>constraint fk_emp_dept foreign key(dep_id) reference dept(id)alter table emp drop foreign key fk_emp_deptalter table emp add constraint fk_emp_dept foreign key(dept_id) reference dept(id)</pre><p>数据库设计：<br>有一对一，一对多，多对多的情况。<br>一对一：拆分表，为了提升访问速度，这时主键要加上UNIQUE<br>一对多：在多的那一侧加主键<br>多对多：新建一张中间表，加两个主键</p><p>多表查询 子查询</p>]]></content>
    
    
    <categories>
      
      <category>JavaWeb学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL分类</title>
    <link href="/2023/01/29/SQl%E5%88%86%E7%B1%BB/"/>
    <url>/2023/01/29/SQl%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<p>SQL语言可以分为四个类型，它们分别是：</p><pre>DDL(Data Definition Language) DML(Data Manipulation Language)DQL(Data Query Language)DCL(Data Control Languange)</pre><p><img src="/2023/01/29/SQl%E5%88%86%E7%B1%BB/%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="结构图"><br>接下来根据这四个分类对SQL语言进行详细的介绍：</p><h1 id="1-DDL"><a href="#1-DDL" class="headerlink" title="1. DDL"></a>1. DDL</h1><pre>显示所有：show databases创建：create database db1;create database db1;(error, 已存在)可以使用:create database if not exists db1;删除：drop database db2;drop database db2;(error, 已删除)可以使用：drop database if exists db2;使用数据库：use db1;查询当前数据库：select database();</pre><h1 id="2-DDL-CRUD-表操作"><a href="#2-DDL-CRUD-表操作" class="headerlink" title="2. DDL (CRUD)表操作"></a>2. DDL (CRUD)表操作</h1><p>Create:</p><pre>create table tb_user(    id int,    username varchar(20),    password varchar(32))；shwo tables;desc rb_user;</pre><p>MySQL里的数据类型:<br><img src="/2023/01/29/SQl%E5%88%86%E7%B1%BB/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="sql数据类型"><br>age int<br>score double(总长度，小数点后保留的位数)<br>birthday date<br>name char(10)<br>name varchar(10)<br>char和varchar区别：char是定长，字符长度不够会自动用空格填补，而varchar会计算并分配空间，所以varchar<br>存储效率低，但使用空间小</p><p>Retrieve:</p><pre>use mysql;show tables;desc(description) func;</pre><p>Update:</p><pre>alter table 表名 rename to 新的表名  ,,            ADD       ,,  ,,            ADD     列名 数据类型  ,,            MODIFY  列名 新数据类型  ,,            CHANGE  列名  新列名 新数据类型  ,,            DROP    列名</pre><p>Delete:</p><pre>drop table tb_user;</pre><h1 id="3-DML"><a href="#3-DML" class="headerlink" title="3.DML"></a>3.DML</h1><p>添加</p><pre>insert into 表名（列名1，列名2，...) values(值1，值2，...)insert into 表名 values(值1，值2，...)批量添加：insert into 表名（列名1，列名2，...),values(值1，值2，...).values(值1，值2，...)values(值1，值2，...)insert into 表名 values(值1，值2，...),values(值1，值2，...),values(值1，值2，...)</pre><p>修改</p><pre>update 表名 set 列名1=值1， 列名2=值2，... [where 条件]</pre><p>删除</p><pre>delete from 表名 [where 条件]</pre><h1 id="4-DQL-查询"><a href="#4-DQL-查询" class="headerlink" title="4.DQL 查询"></a>4.DQL 查询</h1><p>select<br>    字段列表<br>from<br>    表名列表<br>where<br>    条件列表<br>group by<br>    分组字段<br>having<br>    分组后条件<br>order by<br>    排序字段<br>limit<br>    分页限定</p><p><img src="/2023/01/29/SQl%E5%88%86%E7%B1%BB/%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F.png" alt="条件表达式"></p><p>接下来又讲了where和order by和group by</p><p>其中要注意一下where和having的区别：<br>・执行时机不一样：where是分组之前进行限定(group by)，不满足条件的不参与分组，而having是对之后的进行过滤<br>・where不能对聚合函数进行判断，而having可以<br>执行顺序：where&gt;聚合函数&gt;having</p><p>LIMIT分页查询，就是把数据一页一页展示出来</p><pre>select 字段列表 from 表名 limit 起始索引， 查询条目数</pre><p>注：limit是mysql的方言</p>]]></content>
    
    
    <categories>
      
      <category>JavaWeb学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>总结一下Java String类</title>
    <link href="/2023/01/28/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8BJava%20String%E7%B1%BB/"/>
    <url>/2023/01/28/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8BJava%20String%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<p>1.创建一个字符串<br>最简单的方法当然是：</p><pre>String s = "abcd";</pre><p>这相当于</p><pre>char data[] = {'a','b','c','d'};String s = new String(data);</pre><p>方法里还提供了offset和count两个参数，例如：</p><pre>char data[] = {'a','b','c','d'};String s = new String(data, 1, 2);s : "bc"</pre><p>String类是immutable的，如果想要创建可变的字符串可以用<pre>StringBuffer</pre>或者<pre>StringBuilder</pre>类，例如：</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
